#ifndef ACM_DEFS_H
#define ACM_DEFS_H

/// private definitions for acm module


#define FIRST_LVL_CANDLE_NB 12
#define SECOND_LVL_CANDLE_NB 8
#define ACM_CAKE_ENCODER_RESOLUTION 12

typedef enum {
  ACM_SM_INIT = 0,
  ACM_SM_INACTIVE,

  ACM_SM_MAX_OPEN_SECOND_LVL, //2
  ACM_SM_MAX_WAIT_SECOND_LVL_OPEN,
  ACM_SM_MAX_OPEN_FIRST_LVL_LEFT,
  ACM_SM_MAX_WAIT_FIRST_LVL_LEFT_OPEN,
  ACM_SM_MAX_OPEN_FIRST_LVL_RIGHT,
  ACM_SM_MAX_WAIT_FIRST_LVL_RIGHT_OPEN,

  ACM_SM_HOME_MOVE_FIRST_LVL_LEFT, //8
  ACM_SM_HOME_WAIT_FIRST_LVL_LEFT_HOMED,
  ACM_SM_HOME_MOVE_FIRST_LVL_RIGHT,
  ACM_SM_HOME_WAIT_FIRST_LVL_RIGHT_HOMED,
  ACM_SM_HOME_MOVE_SECOND_LVL,
  ACM_SM_HOME_WAIT_SECOND_LBL_HOMED,

  ACM_SM_CAKING_MOVE_SECOND_LVL, //14
  ACM_SM_CAKING_WAIT_SECOND_LVL_MOVED,
  ACM_SM_CAKING_MOVE_FIRST_LVL_LEFT,
  ACM_SM_CAKING_WAIT_FIRST_LVL_LEFT_MOVED,
  ACM_SM_CAKING_MOVE_FIRST_LVL_RIGHT,
  ACM_SM_CAKING_WAIT_FIRST_LVL_RIGHT_MOVED,
  ACM_SM_CAKING_RESET_ENCODER_VALUE,
  ACM_SM_CAKING_WAIT_CANDLES,
  ACM_SM_CAKING_GET_NEXT_CANDLE_COLOR,
  ACM_SM_CAKING_UPDATE_ARMS,
  ACM_SM_CAKING_UPDATE_CANDLE_COLOR,

} acm_sm_state_t;



typedef enum {
  ACM_ARM_HOMED = 0,
  ACM_ARM_STALLING,
  ACM_ARM_ON_CAKE,
  ACM_ARM_ON_CAKE_BLOW_CANDLE,
  ACM_ARM_ON_CAKE_AVOID_CANDLE,
  ACM_ARM_SECOND_LVL_BLOW_LAST_RED_CANDLE,
} acm_arm_config_t;

typedef enum {
  ACM_ARM_SECOND_LVL = 0,
  ACM_ARM_FIRST_LVL_LEFT,
  ACM_ARM_FIRST_LVL_RIGHT,
} acm_arm_t;

#endif  //ACM_DEFS_H
