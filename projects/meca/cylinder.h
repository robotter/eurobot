#ifndef CYLINDER_H
#define CYLINDER_H

#include "jevois_cam.h"

typedef enum{
  CYLINDER_INIT = 0,
  CYLINDER_IDLE,
  CYLINDER_CHECK_EMPTY_PREPARE,
  CYLINDER_CHECK_EMPTY,
  CYLINDER_CHECK_EMPTY_ORDER_MOVING,
  CYLINDER_CHECK_EMPTY_MOVING, //5
  CYLINDER_BALLEATER_PRE_TAKE,
  CYLINDER_BALLEATER_TAKE,
  CYLINDER_BALLEATER_POST_TAKE,
  CYLINDER_EATING_FIND_EMPTY,
  CYLINDER_EATING_FIND_EMPTY_ORDER_MOVING, //10
  CYLINDER_EATING_FIND_EMPTY_MOVING,
  CYLINDER_IS_FULL,
  CYLINDER_THROWBALLS_PREPARE,
  CYLINDER_THROWBALLS_PREPARE_MOVING,
  CYLINDER_THROWBALLS, //15
  CYLINDER_THROWBALLS_WAIT_FLYING,
  CYLINDER_THROWBALLS_WAIT_TURBINE_STOP,
  CYLINDER_THROWBALLS_ORDER_MOVING,
  CYLINDER_THROWBALLS_MOVING,
  CYLINDER_THROWBALLS_WHEELMODE_PREPARE_ORDER_MOVE, //20
  CYLINDER_THROWBALLS_WHEELMODE_PREPARE_MOVING,
  CYLINDER_THROWBALLS_WHEELMODE,
  CYLINDER_THROWBALLS_WHEELMODE_TURNING,
}cylinder_state_t;

typedef struct {
  jevois_color_t robot_color;
  cylinder_state_t state;

  uint8_t position;

  uint32_t moving_ts;
  uint32_t drop_ts;
  uint32_t throw_ts;

  jevois_color_t ball_color[CYLINDER_NB_POS];
}cylinder_t;


extern cylinder_t cylinder;


void cylinder_update(void);
void cylinder_init(void);
void cylinder_shutdown(void);

#endif//CYLINDER_H
