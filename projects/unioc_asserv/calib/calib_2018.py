#!/usr/bin/env python3

import numpy as np

def print_33C(name,M):
  print("double %s[9] = {"%name)
  print(" %f, %f, %f,"%(M[0][0],M[0][1],M[0][2]))
  print(" %f, %f, %f,"%(M[1][0],M[1][1],M[1][2]))
  print(" %f, %f, %f,"%(M[2][0],M[2][1],M[2][2]))
  print("}")

def main():
  encoders = np.array([
    [-68589, 122638, -55470],
    [-47306, 83142, -36492],
    [-28769, 50190, -23470],
    [-11139, 17054, -7854],
    [ 57787, -116504, 54996],
    [ 42594, -85940, 39452],
    [ 17533, -35708, 16210],

#    [-75958,144310,-68106],
#    [-51889,97060,-44972],
#    [-32159,60332,-27782],
#    [67515,-133638,64390],
#    [50063,-92668,44796],
#    [20805,-38002,18668],

    [126392,48,-131528],
    [85542,84,-90058],
    [36431,-58,-38054],
    [-35512,68,34944],
    [-84929,194,88860],
    [-132728,-130598,-130308],
    [-261479,-260010,-259610],
    [137592,121500,129338],
    [276000,245214,259446],
  ])

  xyr = np.array([
    [500,0,0],
    [335,0,0],
    [200,0,0],
    [70,0,0],
    [-475,0,0],
    [-335,0,0],
    [-145,0,0],
#    [590,0,0],
#    [400,0,0],
#    [340,0,0],
#    [-545,0,0 ],
#    [-390,0,0],
#    [-160,0,0],

    [0,600,0],
    [0,410,0],
    [0,175,0],
    [0,-165,0],
    [0,-400,0],
    [0,0,+2*np.pi],
    [0,0,+4*np.pi],
    [0,0,-2*np.pi],
    [0,0,-4*np.pi],
  ])
  
  # lstsq(a,b) return x so a.x = b
  M,res,_,_ = np.linalg.lstsq(encoders,xyr,rcond=0)
  M = 1000*np.transpose(M)
  print("residuals=",res)
  print_33C("hrobot_motors_invmatrix",M)
  
  iM = -np.linalg.inv(M)
  print_33C("hrobot_motors_matrix",iM)

if __name__ == '__main__':
  main()
